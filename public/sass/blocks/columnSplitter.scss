@import "../variables/sizes";
@import "../variables/spacings";

@mixin paddingInner ($numColumns , $column) {
  @if $numColumns == 2 and $column == 1 {
    padding-right: $spacing;
  } @else if $numColumns == 2 and $column == 2 {
    padding-left: $spacing;
  } @else if $numColumns == 3 and $column == 1 {
    padding-right: 13px;
  } @else if $numColumns == 3 and $column == 2 {
    padding-left: 7px;
    padding-right: 6px;
  } @else if $numColumns == 3 and $column == 3 {
    padding-left: 13px;
  } @else if $numColumns == 4 and $column == 1 {
    padding-right: 1.5 * $spacing;
  } @else if $numColumns == 4 and $column == 2 {
    padding-left: $halfSpacing;
    padding-right: $spacing;
  } @else if $numColumns == 4 and $column == 3 {
    padding-left: $spacing;
    padding-right: $halfSpacing;
  } @else if $numColumns == 4 and $column == 4 {
    padding-left: 1.5 * $spacing;
  }
}


@mixin createColumn ($ordinal , $restColumns , $width) {
  @if $ordinal > 1 {
    .columns .column.column#{$ordinal} {
      width: percentage((1.0 - $width) / ($restColumns));
      float: left;
      .columnInner {
        overflow: hidden;
        @include paddingInner ($restColumns + 1, $ordinal);
      }
    }
  } @else if $ordinal == 1 {
    .columns .column.column#{$ordinal} {
      float: left;
      width: percentage($width);
      .columnInner {
        overflow: hidden;
        @include paddingInner ($restColumns + 1, $ordinal);
      }
    }
  }
}

@mixin createAllColumns ($counter , $restColumns , $width) {
  @if $counter > 0 {
    @include createAllColumns (($counter - 1) , $restColumns , $width);
    @include createColumn ($counter , $restColumns , $width);
  }
}

@mixin createColumnSplitterDefault ($numColumns , $width) {
   &.using#{$numColumns}columns {
      @include createAllColumns ($numColumns , ($numColumns - 1) , $width);
    }
}

@mixin createColumnSplitterWithType ($numColumns , $width , $type) {
  &.using#{$numColumns}columns#{$type} {
    @include createAllColumns ($numColumns , ($numColumns - 1) , $width);
  }
}

@mixin createColumnSplitter ($numColumns) {
  @include createColumnSplitterDefault ($numColumns , (1.0 / $numColumns));
  @include createColumnSplitterWithType ($numColumns , 0.25 , -quarter);
  @include createColumnSplitterWithType ($numColumns , 0.33 , -narrow);
  @include createColumnSplitterWithType ($numColumns , 0.5 , -medium);
  @include createColumnSplitterWithType ($numColumns , 0.66 , -wide);
  @include createColumnSplitterWithType ($numColumns , 0.75 , -big);
}

.block.columnSplitter {
  @include noSpacing();
  overflow: hidden;
  max-width: 100%;

  .columns {
    @include noSpacing();
    overflow: hidden;

    .column {
      .columnInner {
        .columnItemSeparator {
          padding: ($spacing - 1px) 0px $spacing 0px;
          margin:  0px;
          clear: both;

          .columnItemSeparatorInner {
            height: 1px;
            display: block;
          }
        }
      }
    }
  }

  .columnSplitter {

    .columns {
      @include noSpacing();
      overflow: hidden;

      .column {
        &.column1 {
          .columnInner{
            padding-left: 0px;
          }
        }
      }
    }
  }

  .column1Inner {
    @include noSpacing();
  }

  .column2Inner {
    @include noSpacing();
  }

  .column2Inner {
    @include noSpacing();
  }

  .column3Inner {
    @include noSpacing();
  }

  &.using1columns {
    .column1 {
      width: 100%;
    }
  }

  @include createColumnSplitter(2);
  @include createColumnSplitter(3);
  @include createColumnSplitter(4);
}